{"version":3,"sources":["webpack:///./src/pages/archive.js"],"names":["colors","theme","fonts","fontSizes","StyledMainContainer","styled","Main","StyledTableContainer","div","media","tablet","StyledTable","table","transition","lightNavy","sm","lightestSlate","xl","lg","xs","SFMono","mixins","flexCenter","ArchivePage","location","projects","data","allMarkdownRemark","edges","revealTitle","useRef","revealTable","revealProjects","useEffect","sr","reveal","current","srConfig","forEach","ref","i","rel","href","className","length","map","node","frontmatter","date","github","external","ios","android","title","tech","company","key","el","Date","getFullYear","item","target","aria-label","name","pageQuery"],"mappings":"mpBAUQA,EAA6BC,IAA7BD,OAAQE,EAAqBD,IAArBC,MAAOC,EAAcF,IAAdE,UAEjBC,EAAsBC,YAAOC,KAAV,kFAAGD,CAAH,MACnBE,EAAuBF,IAAOG,IAAV,mFAAGH,CAAH,4BAEtBI,IAAMC,OAFgB,MAMpBC,EAAcN,IAAOO,MAAV,0EAAGP,CAAH,iiBAKXI,IAAMC,OALK,KAWCT,IAAMY,WAIEb,EAAOc,UAQ3BL,IAAMC,OAvBK,KAiCTD,IAAMC,OAjCG,IAkCIP,EAAUY,IAKhBf,EAAOgB,cACHb,EAAUc,GAMVd,EAAUe,GAGVf,EAAUgB,GACRjB,EAAMkB,OAafC,IAAOC,YA2IJC,UA7HK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SACfC,EADoC,EAAXC,KACTC,kBAAkBC,MAElCC,EAAcC,iBAAO,MACrBC,EAAcD,iBAAO,MACrBE,EAAiBF,iBAAO,IAO9B,OANAG,qBAAU,WACRC,IAAGC,OAAON,EAAYO,QAASC,sBAC/BH,IAAGC,OAAOJ,EAAYK,QAASC,sBAC/BL,EAAeI,QAAQE,SAAQ,SAACC,EAAKC,GAAN,OAAYN,IAAGC,OAAOI,EAAKF,mBAAa,GAAJG,SAClE,IAGD,kBAAC,IAAD,CAAQhB,SAAUA,GAChB,kBAAC,SAAD,KACE,6CACA,0BAAMiB,IAAI,YAAYC,KAAK,MAG7B,kBAACtC,EAAD,KACE,4BAAQmC,IAAKV,GACX,wBAAIc,UAAU,aAAd,WACA,uBAAGA,UAAU,YAAb,wCAGF,kBAACpC,EAAD,CAAsBgC,IAAKR,GACzB,kBAACpB,EAAD,KACE,+BACE,4BACE,oCACA,qCACA,wBAAIgC,UAAU,kBAAd,WACA,wBAAIA,UAAU,kBAAd,cACA,sCAGJ,+BACGlB,EAASmB,OAAS,GACjBnB,EAASoB,KAAI,WAAWL,GAAO,IAAD,IAAdM,KAULC,YARPC,EAF0B,EAE1BA,KACAC,EAH0B,EAG1BA,OACAC,EAJ0B,EAI1BA,SACAC,EAL0B,EAK1BA,IACAC,EAN0B,EAM1BA,QACAC,EAP0B,EAO1BA,MACAC,EAR0B,EAQ1BA,KACAC,EAT0B,EAS1BA,QAEF,OACE,wBAAIC,IAAKhB,EAAGD,IAAK,SAAAkB,GAAE,OAAKzB,EAAeI,QAAQI,GAAKiB,IAClD,wBAAId,UAAU,iBAAd,GAAkC,IAAIe,KAAKV,GAAMW,eAEjD,wBAAIhB,UAAU,SAASU,GAEvB,wBAAIV,UAAU,0BACXY,EAAU,8BAAOA,GAAkB,oCAGtC,wBAAIZ,UAAU,uBACXW,EAAKV,OAAS,GACbU,EAAKT,KAAI,SAACe,EAAMpB,GAAP,OACP,0BAAMgB,IAAKhB,GACRoB,EACA,GACApB,IAAMc,EAAKV,OAAS,GAAK,0BAAMD,UAAU,aAAhB,UAKlC,wBAAIA,UAAU,SACZ,8BACGO,GACC,uBACER,KAAMQ,EACNW,OAAO,SACPpB,IAAI,+BACJqB,aAAW,iBACX,kBAAC,IAAD,CAAeC,KAAK,cAGvBd,GACC,uBACEP,KAAMO,EACNY,OAAO,SACPpB,IAAI,+BACJqB,aAAW,eACX,kBAAC,IAAD,CAAeC,KAAK,YAGvBZ,GACC,uBACET,KAAMS,EACNU,OAAO,SACPpB,IAAI,+BACJqB,aAAW,wBACX,kBAAC,IAAD,CAAeC,KAAK,cAGvBX,GACC,uBACEV,KAAMU,EACNS,OAAO,SACPpB,IAAI,+BACJqB,aAAW,0BACX,kBAAC,IAAD,CAAeC,KAAK,2BAsB3C,IAAMC,EAAS","file":"component---src-pages-archive-js-f3636731867aa5ffef20.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport sr from '@utils/sr';\r\nimport { srConfig } from '@config';\r\nimport { Layout } from '@components';\r\nimport { FormattedIcon } from '@components/icons';\r\nimport styled from 'styled-components';\r\nimport { theme, mixins, media, Main } from '@styles';\r\nconst { colors, fonts, fontSizes } = theme;\r\n\r\nconst StyledMainContainer = styled(Main)``;\r\nconst StyledTableContainer = styled.div`\r\n  margin: 100px -20px;\r\n  ${media.tablet`\r\n    margin: 100px -10px;\r\n  `};\r\n`;\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n\r\n  .hide-on-mobile {\r\n    ${media.tablet`\r\n      display: none;\r\n    `};\r\n  }\r\n\r\n  tbody tr {\r\n    transition: ${theme.transition};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background-color: ${colors.lightNavy};\r\n    }\r\n  }\r\n  th,\r\n  td {\r\n    cursor: default;\r\n    line-height: 1.5;\r\n    padding: 10px 20px;\r\n    ${media.tablet`\r\n      padding: 10px;\r\n    `};\r\n  }\r\n  th {\r\n    text-align: left;\r\n  }\r\n  td {\r\n    &.year {\r\n      width: 10%;\r\n      ${media.tablet`\r\n        font-size: ${fontSizes.sm};\r\n      `};\r\n    }\r\n    &.title {\r\n      padding-top: 15px;\r\n      color: ${colors.lightestSlate};\r\n      font-size: ${fontSizes.xl};\r\n      font-weight: 700;\r\n    }\r\n    &.company {\r\n      width: 15%;\r\n      padding-top: 15px;\r\n      font-size: ${fontSizes.lg};\r\n    }\r\n    &.tech {\r\n      font-size: ${fontSizes.xs};\r\n      font-family: ${fonts.SFMono};\r\n      .separator {\r\n        margin: 0 5px;\r\n      }\r\n      span {\r\n        display: inline-block;\r\n      }\r\n    }\r\n    &.links {\r\n      span {\r\n        display: flex;\r\n        align-items: center;\r\n        a {\r\n          ${mixins.flexCenter};\r\n        }\r\n        a + a {\r\n          margin-left: 10px;\r\n        }\r\n        svg {\r\n          width: 20px;\r\n          height: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ArchivePage = ({ location, data }) => {\r\n  const projects = data.allMarkdownRemark.edges;\r\n\r\n  const revealTitle = useRef(null);\r\n  const revealTable = useRef(null);\r\n  const revealProjects = useRef([]);\r\n  useEffect(() => {\r\n    sr.reveal(revealTitle.current, srConfig());\r\n    sr.reveal(revealTable.current, srConfig());\r\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 10)));\r\n  }, []);\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Helmet>\r\n        <title>Archive | </title>\r\n        <link rel=\"canonical\" href=\"\" />\r\n      </Helmet>\r\n\r\n      <StyledMainContainer>\r\n        <header ref={revealTitle}>\r\n          <h1 className=\"big-title\">Archive</h1>\r\n          <p className=\"subtitle\">A big list of things I’ve worked on</p>\r\n        </header>\r\n\r\n        <StyledTableContainer ref={revealTable}>\r\n          <StyledTable>\r\n            <thead>\r\n              <tr>\r\n                <th>Year</th>\r\n                <th>Title</th>\r\n                <th className=\"hide-on-mobile\">Made at</th>\r\n                <th className=\"hide-on-mobile\">Built with</th>\r\n                <th>Link</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {projects.length > 0 &&\r\n                projects.map(({ node }, i) => {\r\n                  const {\r\n                    date,\r\n                    github,\r\n                    external,\r\n                    ios,\r\n                    android,\r\n                    title,\r\n                    tech,\r\n                    company,\r\n                  } = node.frontmatter;\r\n                  return (\r\n                    <tr key={i} ref={el => (revealProjects.current[i] = el)}>\r\n                      <td className=\"overline year\">{`${new Date(date).getFullYear()}`}</td>\r\n\r\n                      <td className=\"title\">{title}</td>\r\n\r\n                      <td className=\"company hide-on-mobile\">\r\n                        {company ? <span>{company}</span> : <span>—</span>}\r\n                      </td>\r\n\r\n                      <td className=\"tech hide-on-mobile\">\r\n                        {tech.length > 0 &&\r\n                          tech.map((item, i) => (\r\n                            <span key={i}>\r\n                              {item}\r\n                              {''}\r\n                              {i !== tech.length - 1 && <span className=\"separator\">&middot;</span>}\r\n                            </span>\r\n                          ))}\r\n                      </td>\r\n\r\n                      <td className=\"links\">\r\n                        <span>\r\n                          {external && (\r\n                            <a\r\n                              href={external}\r\n                              target=\"_blank\"\r\n                              rel=\"nofollow noopener noreferrer\"\r\n                              aria-label=\"External Link\">\r\n                              <FormattedIcon name=\"External\" />\r\n                            </a>\r\n                          )}\r\n                          {github && (\r\n                            <a\r\n                              href={github}\r\n                              target=\"_blank\"\r\n                              rel=\"nofollow noopener noreferrer\"\r\n                              aria-label=\"GitHub Link\">\r\n                              <FormattedIcon name=\"GitHub\" />\r\n                            </a>\r\n                          )}\r\n                          {ios && (\r\n                            <a\r\n                              href={ios}\r\n                              target=\"_blank\"\r\n                              rel=\"nofollow noopener noreferrer\"\r\n                              aria-label=\"Apple App Store Link\">\r\n                              <FormattedIcon name=\"AppStore\" />\r\n                            </a>\r\n                          )}\r\n                          {android && (\r\n                            <a\r\n                              href={android}\r\n                              target=\"_blank\"\r\n                              rel=\"nofollow noopener noreferrer\"\r\n                              aria-label=\"Google Play Store Link\">\r\n                              <FormattedIcon name=\"PlayStore\" />\r\n                            </a>\r\n                          )}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </StyledTable>\r\n        </StyledTableContainer>\r\n      </StyledMainContainer>\r\n    </Layout>\r\n  );\r\n};\r\nArchivePage.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ArchivePage;\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            date\r\n            title\r\n            tech\r\n            github\r\n            external\r\n            ios\r\n            android\r\n            company\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}